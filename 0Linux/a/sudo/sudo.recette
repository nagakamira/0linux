#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=1.8.16
WGET=http://www.sudo.ws/dist/$NAMESRC-$VERSION.tar.gz
DESC="Outil de gestion de privilèges utilisateurs"

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sbindir=/usr/sbin \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--libexecdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--enable-noargs-shell \
	--enable-shell-sets-home \
	--with-all-insults \
	--with-env-editor \
	--with-passprompt="Mot de passe pour %p : " \
	--without-pam \
	--build=${PKGARCH}-0linux-linux-gnu

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}

# On lance la suite de tests si $TESTS est positionnée :
if [ ! "${TESTS}" = "" ]; then
	LC_ALL=C make -k check 2>&1 || true
fi

# On crée le fichier de config' et on s'assure de ne rien écraser :
cat > ${PKG}/etc/sudoers.0nouveau << "EOF"
# Fichier de configuration de 'sudo'.
#
# Ce fichier peut être édité avec 'visudo' pour éviter les erreurs de
# syntaxe. Mais comme vous êtes soigneux(se), vous pouvez l'éditer avec
# ce que vous voulez après avoir modifié les droits de ' sudoers'.
# 
# Voyez 'man sudo' et 'man sudoers'.

# Alias d'hôtes : pour identifier un groupe d'hôtes ou machines via leur nom
# d'hôte ou adresses IP (caractères jokers autorisés)
#Host_Alias	SERVEURSWEB = www1, www2, www3

# Alias des utilisateurs : pour identifier un groupe d'utilisateurs, selon
# leur nom d'utilisateur, UID, groupe Unix ou réseau.
#User_Alias	ADMINISTRATEURS = pierre, paul, jacques, momo

# Alias des commandes : pour identifier un groupe de commandes à autoriser.
#Cmnd_Alias	COMMANDES = /usr/bin/nice, /usr/bin/kill, /usr/bin/top

# Préservation des variables d'environnement dans les commandes via 'sudo'.
# Syntaxe : Defaults env_keep += "LANG LANGUAGE DISPLAY QTDIR"
# Ici on permet à 'sudo' d'accéder aux binaire de '/*sbin', comme 'root' :
Defaults	secure_path = /usr/sbin:/usr/bin

# Journalisation : Décommentez ce qui suit pour activer la journalisation
# des commandes, sauf 'sudoreplay' dans l'exemple qui suit :
#Defaults log_output
#Defaults!/usr/bin/sudoreplay !log_output

# Privilèges des utilisateurs.

# 'root' a tous les droits pour invoquer sudo :
root ALL=(ALL) ALL

# Le groupe d'utilisateurs par défaut 'users' peut invoquer 'sudo' :
%users ALL=(ALL) ALL

# Le groupe 'sudo peut invoquer 'sudo' SANS MOT DE PASSE. Réfléchissez bien
# aux implications en terme de sécurité : si vous ajoutez un utilisateur au
# groupe 'sudo', c'est comme si vous lui donniez le mot de passe root !!!
%sudo ALL=(ALL) NOPASSWD: ALL

# On inclut tous les fichiers de configurations trouvés sous '/etc/sudoers.d'
# (attention, le dièze « # » ici ne représente pas un commentaire !) :
#includedir /etc/sudoers.d

EOF

# On s'assure d'une permission :
chmod 755 ${PKG}/var

installer_doc
creer_post_installation

# On complète la post-installation :
cat >> ${PKG}/post-install.sh << "EOF"
# On s'assure des permissions :
chmod 4711 usr/bin/sudo
chmod 0755 usr/sbin/visudo
chmod 0640 /etc/sudoers.0nouveau 2>/dev/null
chmod 0440 /etc/sudoers 2>/dev/null

EOF

stripper
empaqueter

# C'est fini.
