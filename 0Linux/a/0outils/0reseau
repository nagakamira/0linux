#!/usr/bin/env bash

# On nettoie  :
unset CHOIXNOMS NOMHOTE NOMDOMAINE CHOIXCONFIG DHCPHOST NETPARAMS IPPARAM
unset MASKPARAM GATEPARAM DNSSERVERS

# L'emplacement du fichier de configuration :
NETWORKCONFIGFILE=/etc/0linux/reseau

# Un argument active le traitement automatisé (DHCP uniquement, aucune config' à entrer):
if [ -n "${1}" ]; then
	cat > ${NETWORKCONFIGFILE} << "EOF"
# Paramètres du réseau.
#
# Chaque section contient les paramètres suivants pour l'interface ethX:
# IP[X]="48.4.0.12"             # Si une IP précise est à demander
# SOUSRESEAU[X]="255.255.255.0" # Le masque de sous-réseau
# HOTEDHCP[X]="CC-4652-A"       # Si un nom d'hôte pour DHCP est requis
#
# « X » étant le chiffre de l'interface réseau concernée (eth0, eth1, etc.).
# Si la machine est reliée à un unique modem/routeur de type « box » reliée à
# internet, la plupart sont automatisées, rendant ce fichier inutile.

# IP de la passerelle par défaut :
PASSERELLE=

# Paramètres pour eth0 :
IP[0]=
SOUSRESEAU[0]=
HOTEDHCP[0]=

# Paramètres pour eth1 :
IP[1]=
SOUSRESEAU[1]=
HOTEDHCP[1]=

# Paramètres pour eth2 :
IP[2]=
SOUSRESEAU[2]=
HOTEDHCP[2]=

# Paramètres pour eth3 :
IP[3]=
SOUSRESEAU[3]=
HOTEDHCP[3]=

EOF

else

	# On crée la configuration si elle n'existe pas :
	if [ ! -r ${NETWORKCONFIGFILE} ]; then
		cat > ${NETWORKCONFIGFILE} << "EOF"
# Paramètres du réseau.
#
# Chaque section contient les paramètres suivants pour l'interface ethX:
# IP[X]="48.4.0.12"             # Si une IP précise est à demander
# SOUSRESEAU[X]="255.255.255.0" # Le masque de sous-réseau
# HOTEDHCP[X]="CC-4652-A"       # Si un nom d'hôte pour DHCP est requis
#
# « X » étant le chiffre de l'interface réseau concernée (eth0, eth1, etc.).
# Si la machine est reliée à un unique modem/routeur de type « box » reliée à
# internet, la plupart sont automatisées, rendant ce fichier inutile.

# IP de la passerelle par défaut :
PASSERELLE=

# Paramètres pour eth0 :
IP[0]=
SOUSRESEAU[0]=
HOTEDHCP[0]=

# Paramètres pour eth1 :
IP[1]=
SOUSRESEAU[1]=
HOTEDHCP[1]=

# Paramètres pour eth2 :
IP[2]=
SOUSRESEAU[2]=
HOTEDHCP[2]=

# Paramètres pour eth3 :
IP[3]=
SOUSRESEAU[3]=
HOTEDHCP[3]=

EOF
	fi

	# Cette fonction supprime les espaces superflus via 'echo' :
	crunch() {
		read STRING;
		echo $STRING;
	}

	# Boucle pour le choix du nom d'hôte et du domaine :
	while [ 0 ]; do
		if [ "${INSTALLDEBUG}" = "" ]; then
			clear
		fi
		echo -e "\033[1;32mNommage de votre machine.\033[0;0m"
		echo ""
		echo "Il est temps de baptiser votre machine en lui donnant un nom d'hôte"
		echo "et un nom de domaine. Le nom d'hôte désigne la machine, le nom de domaine"
		echo "désigne le réseau dont elle fait partie, fictif ou pas. Entrez ci-après un"
		echo "nom d'hôte et un nom de domaine sous la forme « hôte domaine.com ». Le nom"
		echo "de domaine peut être fictif. Évitez les ponctuations, accents et majuscules"
		echo "pour maximimser la compatibilité."
		echo "Appuyez sur ENTRÉE pour ignorer cette étape."
		echo ""
		echo "Exemples : pingouin exemple.fr ; ordinateur salon.chezmoi ; etc."
		echo ""
		echo -n "Votre choix : "
		read CHOIXNOMS;
		if [ "$CHOIXNOMS" = "" ]; then
			break
		else
			# L'hôte :
			NOMHOTE="$(echo $CHOIXNOMS | crunch | cut -d' ' -f1)"
			
			# Le domaine :
			NOMDOMAINE="$(echo $CHOIXNOMS | crunch | cut -d' ' -f2)"
			
			# Si le domaine est mal entré :
			if [ "$NOMHOTE" = "" -o "$NOMDOMAINE" = "" ]; then
				echo "Veuillez entrer un nom d'hôte et un nom de domaine, en les séparant"
				echo "par un espace, sous la forme « hôte domaine.com »."
				echo ""
				echo "Exemples : pingouin exemple.fr ; ordinateur salon.chezmoi ; etc."
				sleep 3
				unset CHOIXNOMS
				continue
			else
				# On envoie l'hôte en écrasant le contenu de '/etc/hostname' :
				echo "${NOMHOTE}.${NOMDOMAINE}" > /etc/hostname
				
				# On envoie l'hôte dans '/etc/hosts' pour la boucle locale :
				sed -i "s@pingouin.exemple.fr pingouin@${NOMHOTE}.${NOMDOMAINE} ${NOMHOTE}@" /etc/hosts
				break
			fi
		fi
	done

	# Boucle de configuration du réseau :
	while [ 0 ]; do
		
		# On gère les conflits inter-outils de configuration réseau :
		if [ -e /etc/rc.d/rc.wicd -o -e /etc/rc.d/rc.networkmanager ]; then
			if [ "${NETCONFIG}" = "ok" ]; then
				break
			fi
			if [ "${INSTALLDEBUG}" = "" ]; then
				clear
			fi
			echo -e "\033[1;32mChoix de la configuration du réseau.\033[0;0m"
			echo ""
			echo "Vous avez plusieurs outils de configuration réseau déjà installés"
			echo "sur ce système. Pour éviter les conflits lors de la configuration"
			echo "du réseau, un seul outil doit être activé au démarrage du système."
			echo ""
			echo "Tapez le numéro de l'outil à activer. Les autres seront désactivés."
			echo "Appuyez sur ENTRÉE pour ignorer cette étape et n'utiliser que le"
			echo "fichier de configuration par défaut de 0Linux '/etc/0linux/reseau'."
			echo ""
			if [ -e /etc/rc.d/rc.reseau ]; then
				echo "1 : rc.reseau         - Utiliser le fichier '/etc/0linux/reseau'."
			fi
			if [ -e /etc/rc.d/rc.networkmanager ]; then
				echo "2 : rc.networkmanager - Utiliser NetworkManager."
			fi
			if [ -e /etc/rc.d/rc.wicd ]; then
				echo "3 : rc.wicd.          - Utiliser wicd."
			fi
			echo ""
			echo -n "Votre choix : "
			read RESEAUCONFIGTOOL;
			
			# On rend tout non-exécutable dans un premier temps :
			chmod 644 /etc/rc.d/rc.{networkmanager,reseau,wicd}
			
			# 'rc.reseau' par défaut :
			if [ "$RESEAUCONFIGTOOL" = "" -o "$RESEAUCONFIGTOOL" = "1" ]; then
				chmod 755 /etc/rc.d/rc.reseau
				break
			
			# NetworkManager par défaut :
			elif [ "$RESEAUCONFIGTOOL" = "2" ]; then
				chmod 755 /etc/rc.d/rc.networkmanager
				echo "NetworkManager dispose d'une interface graphique. Vous pouvez"
				echo "l'installer plus tard en tapant :"
				echo "	0g network-manager-applet"
				echo ""
				echo "Appuyez sur ENTRÉE pour continuer."
				echo ""
				read WAITFORKEY;
				break
			
			# 'wicd' par défaut :
			elif [ "$RESEAUCONFIGTOOL" = "3" ]; then
				chmod 755 /etc/rc.d/rc.wicd
				break
			else
				echo "Veuillez entrer un numéro valide (entre 1 et 3) ou appuyez"
				echo "sur ENTRÉE."
				sleep 2
				unset NETCONFIG RESEAUCONFIGTOOL
				continue
			fi
		fi
		
		# 'rc.reseau' est exécutable par défaut ou l'utilisateur l'a choisi
		# explicitement. Si ce n'est pas le cas, on quitte :
		if [ ! -x /etc/rc.d/rc.reseau ]; then
			NETCONFIG="ok"
		fi
		
		if [ "${NETCONFIG}" = "ok" ]; then
			break
		fi
		if [ "${INSTALLDEBUG}" = "" ]; then
			clear
		fi
		echo -e "\033[1;32mConfiguration du réseau filaire.\033[0;0m"
		echo ""
		echo "Définissez comment votre machine se connecte au réseau."
		echo "Si votre IP est assignée par un serveur DHCP (comme beaucoup de"
		echo "fournisseurs d'accés ADSL/câble le font via les « box »), choisissez"
		echo "la configuration via DHCP."
		echo "Si vous devez renseigner une IP spécifique, accéder à un routeur, une"
		echo "passerelle ou un serveur DNS précis, choisissez la configuration"
		echo "manuelle."
		echo "Si vous êtes dans un autre cas (connexion via modem par PPP/SLIP,"
		echo "connexion sans fil uniquement, pas de réseau), apppuyez simplement"
		echo "sur ENTRÉE pour ignorer cette étape."
		echo ""
		echo "1 : DHCP   - configuration automatique via DHCP"
		echo "2 : MANUEL - configuration manuelle"
		echo ""
		echo -n "Votre choix : "
		read CHOIXCONFIG;
		if [ "$CHOIXCONFIG" = "" ]; then
			break
		else
			if [ "$CHOIXCONFIG" = "1" ]; then
				# Boucle pour la config' par DHCP :
				while [ 0 ]; do
					if [ "${INSTALLDEBUG}" = "" ]; then
						clear
					fi
					echo -e "\033[1;32mNom de l'hôte DHCP.\033[0;0m"
					echo ""
					echo "Certains fournisseurs requièrent un nom d'hôte DHCP pour la"
					echo "connexion via DHCP. Si c'est le cas, un nom a probablement été affecté"
					echo "à votre machine par votre administrateur, lequel ressemble à quelque chose"
					echo "comme « CC-NOMBRE-A » selon le fournisseur. Si un nom d'hôte est affecté à"
					echo "votre machine, entrez-le ci-dessous. Si aucun nom d'hôte n'a été affecté,"
					echo "ou que vous ne le connaissez pas, appuyez simplement sur ENTRÉE pour"
					echo "ignorer cette étape."
					echo ""
					echo -n "Votre choix : "
					read DHCPHOST;
					if [ ! "$DHCPHOST" = "" ]; then
						# On envoie l'hôte DHCP à la section pour eth0 :
						sed -i "s/HOTEDHCP\[0\]=.*/HOTEDHCP[0]=${DHCPHOST}/" ${NETWORKCONFIGFILE}
					fi
					NETCONFIG="ok"
					break
				done
				
			# Configuration manuelle :
			else
				while [ 0 ]; do
					if [ "${INSTALLDEBUG}" = "" ]; then
						clear
					fi
					echo -e "\033[1;32mConfiguration manuelle du réseau.\033[0;0m"
					echo ""
					echo "Veuillez entrer ci-dessous votre paramètres réseau, séparés par"
					echo "des espaces. Entrez successivement votre IP, votre masque de sous-"
					echo "réseau, puis l'IP de votre passerelle par défaut sous la forme :"
					echo " « IP MASQUE PASSERELLE »."
					echo "Exemple : 192.168.0.12 255.255.255.0 192.168.0.254"
					echo ""
					echo -n "Votre choix : "
					read NETPARAMS;
					if [ "$NETPARAMS" = "" ]; then
						break
					else
						
						# L'IP :
						IPPARAM="$(echo $NETPARAMS | crunch | cut -d' ' -f1)"
						
						# Le masque de sous-réseau :
						MASKPARAM="$(echo $NETPARAMS | crunch | cut -d' ' -f2)"
						
						# L'IP de la passerelle :
						GATEPARAM="$(echo $NETPARAMS | crunch | cut -d' ' -f3)"
						
						# Si l'utilisateur a mal entré ses paramètres :
						if [ "$IPPARAM" = "" -o "$MASKPARAM" = "" -o "$GATEPARAM" = ""]; then
							echo "Veuillez entrer 3 adresses IP successives, séparées par un espace."
							sleep 2
							unset NETPARAMS
							continue
						fi
						# On envoie les paramètres à la section pour eth0 :
						sed -i "s/IP\[0\]=.*/IP[0]=${IPPARAM}/" ${NETWORKCONFIGFILE}
						sed -i "s/SOUSRESEAU\[0\]=.*/SOUSRESEAU[0]=${MASKPARAM}/" ${NETWORKCONFIGFILE}
						sed -i "s/PASSERELLE=.*/PASSERELLE=${GATEPARAM}/" ${NETWORKCONFIGFILE}
						break
					fi
				done
				
				# Le serveur de noms pour '/etc/resolv.conf' :
				while [ 0 ]; do
					if [ "${INSTALLDEBUG}" = "" ]; then
						clear
					fi
					echo -e "\033[1;32mConfiguration d 'un éventuel serveur de noms de domaine (DNS).\033[0;0m"
					echo ""
					echo "Si vous devez utiliser des serveurs de noms de domaine (DNS) précis"
					echo "pour accéder au réseau, veuillez entrer ci-après 1 ou 2 de leurs IP"
					echo "ou bien appuyez sur ENTRÉE pour ignorer cette étape."
					echo "Il est possible que votre passerelle relaie le service DNS (c'est le"
					echo "cas des « box » des fournisseurs d'accès à Internet en général)."
					echo "Exemple pour utiliser les DNS d'OpenDNS et de Google :"
					echo "208.67.222.222 8.8.8.8"
					echo ""
					echo -n "Votre choix : "
					read DNSSERVERS;
					DNS1="$(echo $DNSSERVERS | crunch | cut -d' ' -f1)"
					DNS2="$(echo $DNSSERVERS | crunch | cut -d' ' -f2)"
					if [ "$DNS1" = "" -a "$DNS2" = "" ]; then
						break
					else
						# On envoie les IP à '/etc/resolv.conf' en écrasant le contenu:
						echo "nameserver ${DNS1}" > /etc/resolv.conf
						
						if [ ! "$DNS2" = "" ]; then
							echo "nameserver ${DNS2}" >> /etc/resolv.conf
						fi
						break
					fi
				done
				NETCONFIG="ok"
			fi
		fi
	done
fi
# C'est fini.
