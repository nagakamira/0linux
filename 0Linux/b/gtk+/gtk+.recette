#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=3.18.7
WGET=(http://ftp.acc.umu.se/pub/gnome/sources/$NAMESRC/2.24/$NAMESRC-2.24.29.tar.xz
      http://ftp.acc.umu.se/pub/gnome/sources/$NAMESRC/$(echo $VERSION | cut -d'.' -f1-2)/$NAMESRC-$VERSION.tar.xz
     )
DESC="Suite d'outils pour la création d'interfaces graphiques"
EXTRADEPS="adwaita-icon-theme icon-naming-utils"

telecharger_sources
cflags

# On compile GTK+ 2 :
preparer_sources $NAMESRC-2.24.29.tar.xz

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On corrige la génération de la doc, en la supprimant :
	sed -i "s/) docs m4macros/) /" Makefile.in
	
	# On supprime ce message inquiétant et inutile :
	sed -i -e '/if (g_hash_table_lookup (display_x11->xid_ht, xid))/d' \
		-e '/g_warning ("XID collision, trouble ahead");/d' \
		gdk/x11/gdkxid.c
	
	# Compilation pour i686 :
	CXX=/usr/bin/false \
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--disable-gtk-doc-html \
		--enable-gtk-doc-html=no \
		--with-xinput=yes \
		--build=${PKGARCH}-0linux-linux-gnu
	
	# On corrige un bug dans les fichiers produits par configure :
	sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool
	
	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
	
	# On renomme ce binaire spécifique à l'architecture pour l'envelopper :
	mv ${PKG}/usr/bin/gtk-query-immodules-2.0{,-32}
	
	# On renomme la configuration :
	mv ${PKG}/etc/gtk-2.0{,-32}
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources $NAMESRC-2.24.29.tar.xz
cflags

# On corrige la génération de la doc, en la supprimant :
sed -i "s/) docs m4macros/) /" Makefile.in

# On supprime ce message inquiétant et inutile :
sed -i -e '/if (g_hash_table_lookup (display_x11->xid_ht, xid))/d' \
	-e '/g_warning ("XID collision, trouble ahead");/d' \
	gdk/x11/gdkxid.c

# Compilation :
CXX=/usr/bin/false \
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--disable-gtk-doc-html \
	--enable-gtk-doc-html=no \
	--enable-introspection \
	--enable-gtk-doc-html=no \
	--disable-gtk-doc-html \
	--with-xinput=yes \
	--build=${PKGARCH}-0linux-linux-gnu

# On corrige un bug dans les fichiers produits par configure :
sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool

make -j${JOBS} || make

# On lance la suite de tests si $TESTS est positionnée :
if [ ! "${TESTS}" = "" ]; then
	make -k check 2>&1 || true
fi

fakeroot make install DESTDIR=${PKG}

if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On renomme la configuration :
	mv ${PKG}/etc/gtk-2.0{,-64}
	
	# On crée un lien générique pour la configuration :
	ln -sf gtk-2.0-64 ${PKG}/etc/gtk-2.0
	
	# On renomme ce binaire spécifique à l'architecture pour l'envelopper :
	mv ${PKG}/usr/bin/gtk-query-immodules-2.0{,-64}
	
	# on lie un binaire générique au programme enveloppe :
	ln -sf enveloppe_multiarch ${PKG}/usr/bin/gtk-query-immodules-2.0
fi

# On affecte un thème par défaut :
echo 'gtk-theme-name="GTK+"' > ${PKG}/etc/gtk-2.0/gtkrc

# On place la doc dans un sous-répertoire dédié :
installer_doc ${NAMETGZ}-${VERSION}/${NAMETGZ}-2.24.29

# On compile GTK+ 3 :
preparer_sources $NAMESRC-$VERSION.tar.xz
cflags

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On corrige la génération de la doc, en la supprimant :
	sed -i "s/) docs m4macros/) /" Makefile.in
	
	# Compilation pour i686 :
	CXX=/usr/bin/false \
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
		--disable-libcanberra \
		--disable-schemas-compile \
		--enable-broadway-backend \
		--enable-wayland-backend \
		--enable-x11-backend \
		--build=${PKGARCH}-0linux-linux-gnu
	
	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
	
	# On renomme ce binaire spécifique à l'architecture pour l'envelopper :
	mv ${PKG}/usr/bin/gtk-query-immodules-3.0{,-32}
	
	# On renomme la configuration :
	mv ${PKG}/etc/gtk-3.0{,-32}
fi

preparer_sources $NAMESRC-$VERSION.tar.xz
cflags

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--disable-schemas-compile \
	--enable-broadway-backend \
	--enable-introspection \
	--enable-wayland-backend \
	--enable-x11-backend \
	--enable-xkb \
	--build=${PKGARCH}-0linux-linux-gnu

# On corrige un bug dans les fichiers produits par configure :
sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool

make -j${JOBS} || make

# On lance la suite de tests si $TESTS est positionnée :
if [ ! "${TESTS}" = "" ]; then
	make -k check 2>&1 || true
fi

fakeroot make install DESTDIR=${PKG}

if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On renomme la configuration :
	mv ${PKG}/etc/gtk-3.0{,-64}
	
	# On crée un lien générique pour la configuration :
	ln -sf gtk-3.0-64 ${PKG}/etc/gtk-3.0
	
	# On renomme ce binaire spécifique à l'architecture pour l'envelopper :
	mv ${PKG}/usr/bin/gtk-query-immodules-2.0{,-64}
	
	# on lie un binaire générique au programme enveloppe :
	ln -sf enveloppe_multiarch ${PKG}/usr/bin/gtk-query-immodules-3.0
fi

# On affecte un thème par défaut :
echo 'gtk-theme-name="Adwaita"' > ${PKG}/etc/gtk-3.0/gtkrc

# On spécifie un thème d'icône par défaut :
cat > ${PKG}/usr/share/gtk-3.0/settings.ini << "EOF"
[Settings]
gtk-icon-theme-name = gnome
gtk-theme-name = Adwaita
gtk-fallback-icon-theme = gnome

EOF

# On spécifie un thème d'icône par défaut sans rien écraser :
cat > ${PKG}/etc/gtk-3.0/settings.ini.0nouveau << "EOF"
[Settings]
gtk-icon-theme-name = gnome
gtk-theme-name = Adwaita
gtk-fallback-icon-theme = gnome

EOF

# On crée un fichier service pour pour mettre à jour les modules GTK+ :
mkdir -p ${PKG}/etc/rc.d
cat > ${PKG}/etc/rc.d/rc.gtk+ << "EOF"
#!/usr/bin/env bash

gtk_start() {
	# Prise en charge du multilib pour x86_64 :
	if [ "$(uname -m)" = "x86_64" ]; then
		gtk-query-immodules-2.0-32 --update-cache &>/dev/null 2>&1
		gtk-query-immodules-2.0-64 --update-cache &>/dev/null 2>&1
		gtk-query-immodules-3.0    --update-cache &>/dev/null 2>&1
	else
		gtk-query-immodules-2.0    --update-cache &>/dev/null 2>&1
		gtk-query-immodules-3.0    --update-cache &>/dev/null 2>&1
	fi
}

case "$1" in
	'start')
		gtk_start
	;;
	
	'stop')
		# On ne fait rien
	;;
	
	'restart')
		gtk_start
	;;
	
	*)
		echo "Utilisation : $0 start|stop|restart"
esac

EOF
chmod +x ${PKG}/etc/rc.d/rc.gtk+

installer_doc
creer_post_installation

# On complète la post-installation :
cat >> ${PKG}/post-install.sh << "EOF"

# On nettoie le cache et on régénère les modules GTK+ :
if [ -x etc/rc.d/rc.gtk+ ]; then
	chroot . /etc/rc.d/rc.gtk+ restart &>/dev/null 2>&1
fi

EOF

stripper
empaqueter

# C'est fini.
