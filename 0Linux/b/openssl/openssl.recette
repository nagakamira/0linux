#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

<<<<<<< HEAD
VERSION=1.0.2e
=======
VERSION=1.0.2g
>>>>>>> Groooooooosse mise à jour pour 0Linux iota :)
WGET=ftp://openssl.org/source/$NAMESRC-$VERSION.tar.gz
DESC="Protocoles et algorithmes OpenSSL"

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On corrige l'appel au compilateur :
	sed -i 's@CC=\$\${CC:-\$(CC)}@CC="\$\${CC:-\$(CC)}"@' Makefile.org
	
	# On corrige l'emplacement des certificats :
	sed -i 's@\./demoCA@/etc/ssl@g' apps/{CA.pl.in,CA.sh,openssl.cnf}
	
	# On corrige l'édition de liens :
	sed -i -e "s/^DO_GNU_APP=.*/DO_GNU_APP=\"\$(CFLAGS)\"/" Makefile.shared
	
	# On modifie le niveau d'optimisation :
	FLAGS=$(echo $FLAGS | sed "s/-O2/-O3/")
	
	# Compilation pour i686 :
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./Configure \
		--prefix=/usr \
		--libdir=lib${LIBDIRSUFFIX} \
		--openssldir=/etc/ssl \
		"linux-elf" \
		shared \
		zlib-dynamic \
		"-Wa,--noexecstack ${FLAGS}"
	
	make MAKEDEPPROG="${CC}" depend
	make -j${JOBS} || make
	fakeroot make install PERL=/usr/bin/perl MANDIR=/usr/man INSTALL_PREFIX=${PKG}
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# La code généré change selon l'architecture visée :
if [ "${PKGARCH}" = "x86_64" ]; then
	TARGETOPT="linux-x86_64"
	EXTRAOPT="enable-ec_nistp_64_gcc_128"
else
	TARGETOPT="linux-elf"
fi

# On corrige l'appel au compilateur :
sed -i 's@CC=\$\${CC:-\$(CC)}@CC="\$\${CC:-\$(CC)}"@' Makefile.org

# On corrige l'emplacement des certificats :
sed -i 's@\./demoCA@/etc/ssl@g' apps/{CA.pl.in,CA.sh,openssl.cnf}

# On corrige l'édition de liens :
sed -i -e "s/^DO_GNU_APP=.*/DO_GNU_APP=\"\$(CFLAGS)\"/" Makefile.shared

# On modifie le niveau d'optimisation :
FLAGS=$(echo $FLAGS | sed "s/-O2/-O3/")

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./Configure \
	--prefix=/usr \
	--libdir=lib${LIBDIRSUFFIX} \
	--openssldir=/etc/ssl \
	shared \
	zlib-dynamic \
	"${TARGETOPT}" "${EXTRAOPT}" \
	"-Wa,--noexecstack ${FLAGS}"

make depend
make -j${JOBS} || make

# On lance la suite de tests si $TESTS est positionnée :
if [ ! "${TESTS}" = "" ]; then
	make -k test 2>&1 || true
fi

fakeroot make install PERL=/usr/bin/perl MANDIR=/usr/man INSTALL_PREFIX=${PKG}

# On veille à ne pas écraser la configuration en place :
mv ${PKG}/etc/ssl/openssl.cnf ${PKG}/etc/ssl/openssl.cnf.0nouveau

# On copie les certificats d'exemple :
cp -ar certs ${PKG}/etc/ssl

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini.
